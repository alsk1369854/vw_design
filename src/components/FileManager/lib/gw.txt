{this.getFileList().map(item => {
            const { objFile: file, deep } = item
            return <div
              key={file.getId()}
              onClick={(event) => this.clickItem(event, file)}
              onDoubleClick={(event) => this.doubleClickItem(event, file)}
              onContextMenu={(event) => this.showItemContextMenu(event, file)}
              className={this.getFileClassName(file)}
            >
              {this.getExpandLine(file.getId(), deep)}

              <span className={style.angleIcon}>
                {(file.isDirectory()) ?
                  (file.isExpand()) ?
                    <FontAwesomeIcon icon={faAngleDown} /> :
                    <FontAwesomeIcon icon={faAngleRight} /> :
                  <FontAwesomeIcon
                    icon={faSquareFull}
                    className={style.isFileAngleIconBackground}
                  />
                }
              </span>

              {/* 是否為 rename 狀態 */}
              {(renameState.file === file) ?
                <>
                  {FileManager.getFileIcon(file, renameState.temporaryFileName)}
                  <span
                    className={style.renameBar}
                    // style={{ width: `calc(100px - ${item.deep! * 10 + 40 + 5}px)` }}
                    style={{ width: `calc(100% - ${deep * 10 + 41}px)` }}
                  >
                    <input
                      className={
                        (renameState.message !== '') ?
                          style.renameInputWarning :
                          style.renameInput
                      }
                      autoFocus
                      defaultValue={renameState.temporaryFileName}
                      onFocus={this.renameOnFocus}
                      onChange={(event => this.renameEvent(event, file))}
                      onClick={(event) => event.stopPropagation()}
                      onKeyDown={(event => this.renameEvent(event, file))}
                    />
                    {(renameState.message !== '') ?
                      <div className={style.renameMessage}>
                        {renameState.message}
                      </div> :
                      <></>
                    }
                  </span>
                </> :
                <>
                  {FileManager.getFileIcon(file)}
                  <span className={style.fileName}>{file.getFileName()}</span>
                </>
              }
            </div>
          })}